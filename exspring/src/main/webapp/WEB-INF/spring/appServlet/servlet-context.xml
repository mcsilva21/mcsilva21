<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 애노테이션을 사용하여 Spring MVC 애플리케이션을 작성할때 필요한 객체들을 자동등록 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/*" location="/resources/**" />
	
<!--스프링이 파일(업로드)이 포함된 폼 데이터를 받아서 해석하기 위해서는 MultipartResolver 등록 필요 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 하나의 요청에 포함된 최대 파일 크기 (byte) 설정 가능-->
	<beans:property name="maxUploadSize" value="100000000"></beans:property>
	</beans:bean>
	

	<!-- 컨트롤로가 문자열(뷰이름)을 반환한 경우-->
	<!-- 그 문자열 앞에 "/WEB-INF/views/"를 붙이고, 뒤에 ".jsp"를 붙여서-->
	<!-- 해당 문자열의 jsp파일 경로로 이동(forward)시키는 역할을 수행-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- kr.ac.kopo 패키지(폴더) 아래에 있는 모든 클래스들을 조사하여,  -->
	<!-- @Component,@Controller,@service,@Reoository 등이 붙어있는 클래스들을 -->
	<!-- 스프링(DispatcherServlet)에 자동 등록 -->
	<context:component-scan base-package="kr.ac.kopo" />
	<!-- @Controller:웹 요청을 받았을 떄 실행되는 메서드를 담고 있는 객체 -->
	<!-- @service: 서비스 계층의 객체에 사용-->
	<!-- @Reoository:DAO 계층의 객체에 사용 -->

<!-- 	핸들러인터셉터들을 등록 -->
	<interceptors>
		<interceptor>
	<!--모든 경로에 대해서 kr.ac.kopo.comm.LoginInterceptor를 실행 -->
	<!--스프링에서 경로 지정시, *는 /를 제외한 모든 문자들을 의미 -->
<!-- 	/a.do (o) , /a/b.do (x), /a/b/c/.do(x) -->
	<!-- **는 /를 포함한 모든 문자들을 의미 -->
<!-- 	 /a.do (o) , /a/b.do (o), /a/b/c/.do (o)	 -->
			<mapping path="/**"/>		
			<mapping path="/*"/>	
<!-- "/member/login.do","/member/add.do" 경로에 대해서는 인터셉트 실행하지 않도록 설정 -->
			<exclude-mapping path="/member/login.do"/>
			<exclude-mapping path="/member/add.do"/>
			<beans:bean class="kr.ac.kopo.comm.LoginInterceptor"></beans:bean>
		</interceptor>
	</interceptors>

	
<!-- 	데이터베이스 연결을 담당하는 데이터소스로서 Common DBCP를 등록 -->
	<beans:bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
<!-- 	데이터베이스 연결에 필요한 접속 정보 설정 -->
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="com"></beans:property>
		<beans:property name="password" value="com01"></beans:property>
	</beans:bean>
		
<!-- 마이바티스 SqlSessionFactory 객체를 생성하여 스프링에 등록 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 마이바티스가 사용할 데이터베이스 연결(커넥션)을 제공하는 데이터소스 설정 -->
	<beans:property name="dataSource" ref="dataSource"></beans:property>
<!-- 마이바티스 설정 파일 위치 -->
	<beans:property name="configLocation" value="classpath:/batis/mybatis-config.xml"></beans:property>
	
	</beans:bean>
	
<!-- 	마이바티스 SqlSession의 구현체로서, 스레드에 안전하고, -->
<!-- 	스프링트랜잭션에 따라서 커밋/롤백하고, 마이바티스 예외를 스프링 예외로 변환 -->

<!-- 	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> -->
<!-- 생성자의 첫번째 인자로 SqlSession을 전달 -->
<!-- 	<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg> -->
<!-- 	</beans:bean> -->
	
<!--kr.ac.kopo 패키지(폴더) 아래에 존재하는,  @Mapper 가 붙은 모든 인터페이스를 찾아서 -->
<!--그 인터페이스의 마이바티스 구현체를 자동 생성하여 스프링에 등록 -->
	<mybatis-spring:scan base-package="kr.ac.kopo" annotation="org.apache.ibatis.annotations.Mapper"/>
	
	
		
</beans:beans>
