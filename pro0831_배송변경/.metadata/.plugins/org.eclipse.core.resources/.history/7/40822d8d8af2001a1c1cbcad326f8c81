package com.cherry.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.cherry.domain.CartListVO;
import com.cherry.domain.CartVO;
import com.cherry.domain.GoodsViewVO;
import com.cherry.domain.OrderDetailVO;
import com.cherry.domain.OrderVO;
import com.cherry.domain.ReplyListVO;
import com.cherry.domain.ReplyVO;
import com.cherry.persistence.ShopDAO;

@Service
public class ShopServiceImpl implements ShopService {
	
	@Inject
	private ShopDAO dao;

	@Override
	public List<GoodsViewVO> list(int cateCode, int level) throws Exception {
		
		int cateCodeRef = 0;
		
		if(level ==1 ) { //1차 분류
			cateCodeRef = cateCode;
			return dao.list(cateCode, cateCodeRef);
		
		}else { //2차 분류
			return dao.list(cateCode);
		}
	}

	//상품조회
	@Override
	public GoodsViewVO goodsView(int gdsNum) throws Exception {
		
		return dao.goodsView(gdsNum);
	}

	//상품 소감(댓글) 작성
	@Override
	public void registReply(ReplyVO reply) throws Exception {
		dao.registReply(reply);
		
	}
	//상품 소감(댓글) 리스트
	@Override
	public List<ReplyListVO> replyList(int gdsNum) throws Exception {
		
		return dao.replyList(gdsNum);
	}

	//아이디 체크
	@Override
	public String idCheck(int repNum) throws Exception {
		
		return dao.idCheck(repNum);
	}

	//댓글 삭제
	@Override
	public void deleteReply(ReplyVO reply) throws Exception {
		dao.deleteReply(reply);
		
	}
	//상품 소감
	@Override
	public void modifyReply(ReplyVO reply) throws Exception {
		dao.modifyReply(reply);
		
	}
	//카트 담기
	@Override
	public void addCart(CartListVO cart) throws Exception {
		dao.addCart(cart);
	}
	//카트 리스트
	@Override
	public List<CartListVO> cartList(String userId) throws Exception {
	
		return dao.cartList(userId);
	}

	//상품삭제
	@Override
	public void deleteCart(CartVO cart) throws Exception {
		dao.deleteCart(cart);
		
	}
	//주문 상세 정보
	@Override
	public void orderInfo_Details(OrderDetailVO orderDetail) throws Exception {
		dao.orderInfo_Details(orderDetail);
		
	}
	//주문정보
	@Override
	public void orderInfo(OrderVO order) throws Exception {
		dao.orderInfo(order);
		
	}
	//카트 비우기
	@Override
	public void cartAllDelete(String userId) throws Exception {
		dao.cartAllDelete(userId);
		
	}
	
	

}
